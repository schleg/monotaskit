.task_actions
 =# link_to '+', new_task_path, :class => 'new_task_link'
 %a#new_task_link{:href=>"tasks/new#new_task_inline"}
  +
%ul.task_list
 - @tasks.each do |task|
  %li.task
   .control{:style=>"float: left; position: relative; top: .5em; padding: 0 .5em 0 .5em"}
    - if task.started.nil?
     = link_to "Start", start_task_path(task), :class=>"start_button"
    - else
     = link_to "Stop", stop_task_path(task), :class=>"stop_button"      
   .description{:style=>"float: left; width: 80%; position: relative; top: .5em"}
    = task.description
   .length{:style=>"z-index: 1001; width: 20%; position: absolute; right: 0; text-align: right; padding: .5em .5em .45em 0"}
    #{task.length ||= 0}m
   .started{:style=>"color: gray; font-size: 50%; z-index: 1001; width: 20%; position: absolute; right: 0; text-align: right; padding: .5em .5em .45em 0"}
    = "@" + task.started.to_s unless task.started.nil?

:javascript

 var endTime = null;
 var timerDisplay = null;
 var timer = null;

 function ticker(){
  var now = new Date();
  var msecs = endTime - now.getTime();
  var minutes = Math.floor(msecs / 1000 / 60);
  var seconds = Math.ceil(msecs / 1000) % 60;
  if(msecs <= 0){
   msecs = 0;
   window.clearTimeout(timer);
   timerDisplay.text("0m");
  } else {
   timerDisplay.text(minutes + "m " + seconds + "s");
   timer = window.setTimeout(ticker,1000);
  }
 }

 function startTimer(taskElement){
  var bar = $('.bar');
  taskElement.append(bar);
  timerDisplay = taskElement.children(".length");
  timerDisplay.css("background-color","#CCCCCC");
  var startTime = new Date();
  var length = parseInt(timerDisplay.text());
  endTime = new Date(startTime.getTime() + (length * 1000 * 60));
  timer = window.setTimeout(ticker,1000);
 }
 var shown;
 var faded;
 $(document).ready(function(){
  var runningTaskEm = $(".stop_button").parent().parent();
  if(runningTaskEm.length > 0){
   $.each($(".start_button"), function(i,v){
    var sb = $(".start_button:eq(" + i + ")");
    sb.parent().html(sb.text());
   });
  }
  startTimer(runningTaskEm);
  //});
 });